<ques>
Problem Statement

	A teacher has just finished grading the test papers for his class. To get an idea of how difficult the test was, he would now like to determine the most common score on the test. In statistics, this is called the "mode" of a set of data points. For instance, if the scores were {65, 70, 88, 70}, then the mode would be 70, since it appears twice while all others appear once.
Sometimes, in the case of a tie, the mode will be more than one number. For instance, if the scores were {88, 70, 65, 70, 88}, then the mode would be {70, 88}, since they both appear most frequently.
	The first line of the input will be the size of the array 'n' followed by the 'n' scores.The output will be an integer array representing the mode of the set of scores. In the case of more than one number, they should be returned in increasing order.

Constraints:

- Input will contain between 1 and 50 elements, inclusive.
- Each score will be between 0 and 100, inclusive.

Time Limit: 200 ms

Examples:

(1) 

Input : 4
        65 70 88 70

Output: 70

(2)

Input : 5
	88 70 65 70 88

Output: 70 88

(3)

Input : 9
	92 56 14 73 22 38 93 45 55

Output: 14 22 38 45 55 56 73 92 93

With no duplicates, all of the elements are the most frequent (appearing once each).

<Source: www.topcoder.com >
</ques>
<code>
#include<vector>
#include<algorithm>
#include<iostream>

using namespace std;

int main()
{
	int no_scores, max_freq=0;;
	cin>>no_scores;
	vector<int> scores,freqs(101,0) ;
	for( int i=0;i<no_scores;i++)
	{
		int temp;
		cin>>temp;
		freqs.at(temp)++;
		if(freqs.at(temp) > max_freq)
			max_freq =freqs.at(temp);
		scores.push_back(temp);	
	}
	for( int i=0;i<101;i++)
		if( freqs.at(i) == max_freq)
			cout <<  i << " ";
	return 0;
}
</code>
<cases>
<tl>
200
</tl>
<i>
50 
0 2 4 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100
</i>
<o>
0 2 4 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100
</o>
<p>
25
</p>
<i>
10
70 70 70 70 60 60 60 50 50 40
</i>
<o>
70
</o>
<p>
25
</p>
<i>
10 
70 70 70 70 70 70 70 70 70 70
</i>
<o>
70
</o>
<p>
25
</p>
<i>
36
10 20 30 55 55 40 50 60 70 80 90 100 10 20 30 40 50 60 70 80 90 100 10 20 30 40 50 60 70 80 90 100 55 55 40 10
</i>
<o>
10 40 55
</o>
<p>
25
</p>
</cases>
<examples>
<tl>
200
</tl>
<i>
4
65 70 88 70
</i>
<o>
70
</o>
<i>
5
88 70 65 70 88
</i>
<o>
70 88
</o>
<i>
9
92 56 14 73 22 38 93 45 55
</i>
<o>
14 22 38 45 55 56 73 92 93
</o>
</examples>
